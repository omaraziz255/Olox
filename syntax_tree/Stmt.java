/**
This file has been generated by the GenerateAst module in the tools package
*/
package syntax_tree;

import lexical_scanner.Token;

abstract public class Stmt {
    public interface Visitor<R> {
    R visitExpressionStmt(Expression stmt);
    R visitPrintStmt(Print stmt);
    }
 static public class Expression extends Stmt {
    Expression(Expr expression) {
    this.expression = expression;
    }

    @Override
    public <R> R accept(Visitor<R> visitor) {
        return visitor.visitExpressionStmt(this);
    }

    public final Expr expression;

}
 static public class Print extends Stmt {
    Print(Expr expression) {
    this.expression = expression;
    }

    @Override
    public <R> R accept(Visitor<R> visitor) {
        return visitor.visitPrintStmt(this);
    }

    public final Expr expression;

}

    public abstract <R> R accept(Visitor<R> visitor);
}
